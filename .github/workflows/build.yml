name: Build Modules
on: [workflow_call, workflow_dispatch]

jobs:
  run:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Get last tag
        id: last_tag
        uses: oprypin/find-latest-tag@v1
        continue-on-error: true
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          releases-only: true

      - name: Get next version code
        id: next_ver_code
        run: |
          TAG="${{ steps.last_tag.outputs.tag }}"
          if [ -z "$TAG" ]; then TAG=0; fi
          echo "NEXT_VER_CODE=$((TAG + 1))" >> $GITHUB_OUTPUT

      - name: Build modules/APKs
        run: ./build.sh config.toml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: $GITHUB_REPOSITORY
          NEXT_VER_CODE: ${{ steps.next_ver_code.outputs.NEXT_VER_CODE }}

      - name: Get output
        id: get_output
        run: |
          DELIM="$(openssl rand -hex 8)"
          echo "BUILD_LOG<<${DELIM}" >> "$GITHUB_OUTPUT"
          cat build.md >> "$GITHUB_OUTPUT"
          echo "${DELIM}" >> "$GITHUB_OUTPUT"
          cp -f build.md build.tmp

      - name: Upload modules to release
        uses: svenstaro/upload-release-action@v2
        with:
          body: ${{ steps.get_output.outputs.BUILD_LOG }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./build/*
          release_name: ReVanced
          tag: ${{ steps.next_ver_code.outputs.NEXT_VER_CODE }}
          file_glob: true
          overwrite: true

      - name: Update changelog and Magisk update json
        id: update_config
        run: |
          git checkout -f update || git switch --discard-changes --orphan update
          cp -f build.tmp build.md
          get_update_json() {
            echo "{
            \"version\": \"$1\",
            \"versionCode\": ${{ steps.next_ver_code.outputs.NEXT_VER_CODE}},
            \"zipUrl\": \"$2\",
            \"changelog\": \"https://raw.githubusercontent.com/$GITHUB_REPOSITORY/update/build.md\"
          }"
          }

          cd build || { echo "build folder not found"; exit 1; }
          for OUTPUT in *magisk*.zip; do
            [ "$OUTPUT" = "*magisk*.zip" ] && continue
            ZIP_S=$(unzip -p "$OUTPUT" module.prop)
            if ! UPDATE_JSON=$(echo "$ZIP_S" | grep updateJson); then continue; fi
            UPDATE_JSON="${UPDATE_JSON##*/}"
            VER=$(echo "$ZIP_S" | grep version=)
            VER="${VER##*=}"
            DLURL="$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/releases/download/${{ steps.next_ver_code.outputs.NEXT_VER_CODE }}/${OUTPUT}"
            get_update_json "$VER" "$DLURL" >"../$UPDATE_JSON"
          done
          cd ..

          find . -name "*-update.json" | grep . || : >dummy-update.json

#      - name: send telegram message on push
#        uses: appleboy/telegram-action@master
#        with:
#          to: ${{ secrets.TELEGRAM_TO }}
#          token: ${{ secrets.TELEGRAM_TOKEN }}
#          message_file: build.md
#          format: markdown
#          disable_web_page_preview: true
   
#      - name: Commit options.toml
#        run: |
#          cd ${{ github.WORKSPACE }}
#          git config --global user.name "GitHub Actions"
#          git config --global user.email "actions@github.com"
#          git add options.toml
#          git commit -m "Update options.toml"
#          git push -f

      - uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: update
          skip_checkout: true
          file_pattern: build.md *-update.json
          commit_message: Bump version ${{ steps.next_ver_code.outputs.NEXT_VER_CODE }}

  Upload_to_Telegram_KevinNitro:
    uses: nikhilbadyal/ghactions/.github/workflows/telegram-uploader.yml@main
    needs: Build_APK
    secrets:
      TELEGRAM_API_ID: ${{ secrets.TELEGRAM_API_ID }}
      TELEGRAM_API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      STICKER_ID: ${{ secrets.STICKER_ID }}
      MESSAGE: RVX báº£n má»›i Ãªi ðŸ¥´ðŸ¥´
  
  Delete_Old_Runs:
    runs-on: ubuntu-latest
    steps:
      - name: Delete Older Releases
        uses: dev-drprasad/delete-older-releases@v0.2.1
        with:
          keep_latest: 7

      - name: Delete old workflow runs
        uses: MajorScruffy/delete-old-workflow-runs@v0.3.0
        with:
          repository: ${{ github.repository }}
          older-than-seconds: 604800