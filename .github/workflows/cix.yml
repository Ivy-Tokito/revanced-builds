name: CI X
on:
  workflow_dispatch:
  schedule:
    - cron: "0 4,16 * * *"

jobs:
  check:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Should build?
        id: should_build
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          source utils.sh
          toml_prep "$(cat config.toml)"

          is_patches_latest() {
            PATCHES_SRC=$(toml_get "$(toml_get_table "")" patches-source) || PATCHES_SRC="inotia00/revanced-patches"
            last_patches_url=$(gh_req https://api.github.com/repos/${PATCHES_SRC}/releases/latest - | json_get 'browser_download_url' | grep 'jar')
            last_patches=${last_patches_url##*/}
            cur_patches=$(sed -n 's/.*Patches: inotia00\/\(.*\)/\1/p' build.md | sed -e 's/([^()]*)//g'  | xargs)
            echo "current patches version: $cur_patches"
            rv_patches_changelog=$(json_get 'updated_at' <<<"$rv_patches" | sed 's/\(\\n\)\+/\\n/g')
            echo $rv_patches_changelog
            echo "latest patches version: $last_patches"
            if [ -z "$cur_patches" ] || [ -z "$last_patches" ]; then return 1; fi
            [ "$cur_patches" != "$last_patches" ] # test success=>build, fail=>dont build
          }

          if ! git checkout update; then
            echo "first time building!"
            echo "SHOULD_BUILD=1" >> $GITHUB_OUTPUT
          elif is_patches_latest ; then
            echo "build!"
            echo "SHOULD_BUILD=1" >> $GITHUB_OUTPUT
          else
            echo "dont build!"
            echo "SHOULD_BUILD=0" >> $GITHUB_OUTPUT
          fi

      - name: Clear older runs
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh run list -L400 --json databaseId -q '.[].databaseId' | tail -n+10 | xargs -IID gh api "repos/$(gh repo view --json nameWithOwner -q .nameWithOwner)/actions/runs/ID" -X DELETE || :

    outputs:
      SHOULD_BUILD: ${{ steps.should_build.outputs.SHOULD_BUILD }}

  build:
    permissions: write-all
    needs: check
    uses: ./.github/workflows/buildx.yml
    if: ${{ needs.check.outputs.SHOULD_BUILD == 1}}
    secrets: inherit

  deletele_action_log:
    permissions: write-all
    uses: ./.github/workflows/del.yml
